# Thesis sections

[-] Add sections for:
    - Poster design

[-] Ray tracing
    - Axis system choice
    - Ray generation
    - Shading pipeline
    - Reflections
    - Depth of field
    - Supersampling
    - etc. (look at source)
[-] Language
    - Examples with code and result scope
    - Continue
[-] GUI
    - Live view: OpenGL
        - jPCT, LWJGL
        - Conversion from scene
        - Sacrifices made
        - Techniques used
        - Hacks
        - Problems with multiple ports
    - NetBeans API
        - Introspection power
        - Java Beans
        - PropertySheet (hack) & PropertyEditor
    - Docking Frames
        - General work
        - Implementation difficulties
[x] Start gathering biography
    - Zotero ?

# Raytracer

[-] Gamma for color blending ! https://www.youtube.com/watch?v=LKnqECcg6Gw
[-] Continue investigating global illumination
[-] More primitives
    - Height map
    - Torus
    - Cylinder
    - Cone
[-] Rework CSG: make Hits have point lists and do basic Set operations from scratch, cleanly
[-] Choice to make about ISL
[-] Listener interface for tracer progress feedback
[-] Clean tracer
[-] Add transform() method to Entity
    - rotate(), translate() and scale() methods change a local matrix
    - subclasses call transform() on their coord calcs
[-] Animations:
    - List of cameras + list of times -> interpolation between cameras
[-] Procedural texturing
    - Bump mapping
    - 3D Perlin noise class for basis
    - Material type that returns texture color for any point in space
        - Woods
        - Metals
    - Try pictures?
[-] Animations
    - Time constant 
    - Possibility to put list of cameras in settings, needs list of times as well -> interpolate
[-] Post processing
    - Chromatic aberration
    - Vignetting

# Live view

[x] Background via Skybox, raytraced
[x] Camera movement
[x] Camera roll
[~] Mouse object picking
    - Object selection
    - Transmit info to netbeans Explorer for properties
    - Object movement
    - Boolean parameter for highlighted objects (do an outline + gray out)
[~] Do a generic parametric shader for all surface types
[~] Multiple viewports: top, side, free-view, quick-render
    - Buttons to choose camera type
    - Grids on parallel views
    - Orthographic projection ?
[-] Recursively go through CSG
    - For union, just display everything
    - For intersection, display both transparent
    - For difference, display B transparent

# Gui

[x] Figure out netbeans trees
[x] Figure out docking frames
[~] Property viewing
[~] Assemble parts 
[~] Icons
[~] RendererPanel methods to draw picture in the center
    - Test if always center
[-] Find way to unite all components
    - How to rewrite script when live editing ? Macros ?
[-] Workspaces (script / live)
[-] Live mode inclusion
[-] Import settings viewer and system info graphs
[-] Menubar
[-] Toolbar

# Refactoring

[-] Clean up everything
[-] Javadoc everything

# Grammar changes

[x] Unify settings
[x] Procedure notation
[x] Review style
[-] Add loops
[-] Add conditions
[-] Invalid channel
[-] Add missing tokens (true, false, Macro)
[-] CSG Blocks don't have attributes

# Next steps

0. Basic features are OK
1. Finish the compiler
2. Start working on the GUI to set all basic features in place
3. Polish features
4. Animations