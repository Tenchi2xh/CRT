# Thesis sections

[-] Ray tracing
    - Axis system choice
    - Ray generation
    - Shading pipeline
    - Reflections
    - Depth of field
    - Supersampling
    - etc. (look at source)
[-] Language
    - Examples with code and result scope
    - Continue
[-] GUI
    - Live view: OpenGL
    - jPCT, LWJGL
    - Conversion from scene
    - Sacrifices made
    - Techniques used
    - Hacks

# Raytracer

[-] Gamma for color blending ! https://www.youtube.com/watch?v=LKnqECcg6Gw
[-] Continue investigating global illumination
[-] More primitives
[-] Rework CSG: make Hits have point lists and do basic Set operations from scratch, cleanly
[-] Choice to make about ISL
[-] Listener interface for tracer progress feedback
[-] Clean tracer

# Live view

[-] Do a generic parametric shader for all surface types
[x] Background via Skybox
    - For 1 color, just change the clear parameter
    - For 2 colors, generate images
    - For panorama, find way to split it in 6 faces
        - Maybe ray trace them!
        - Set a square resolution, 90Â° FOV, and render all faces
[-] Recursively go through CSG
    - For union, just display everything
    - For intersection, display both transparent
    - For difference, display B transparent

# Refactoring

[-] Clean up everything
[-] Javadoc everything

# Grammar changes

[-] Unify settings
[-] Procedure notation
[-] Review style